function  samples = hplcpred(samples,datastruct)

nSamples= size(samples.logkwHat,1);
 
nAnalytes=datastruct.nAnalytes;
nObs=datastruct.nObs;
analyte=datastruct.analyte;
fi=datastruct.fi;
nDiss=datastruct.R;

samples.logkPred=zeros(nSamples, nObs);
samples.logkond =zeros(nSamples, nObs);



for z = 1:nSamples
  z
logkwx=squeeze(samples.logkwx(z,:,:));
S1mx=squeeze(samples.S1mx(z,:,:));
pKaw =squeeze(samples.pKaw(z,:,:));
alpham =squeeze(samples.alpham(z,:,:));  
S2mHat =samples.S2mHat(z,:);  
nu = samples.nu(z,:);
sigma =samples.sigma(z,:);

logkwxPred=squeeze(samples.logkwxPred(z,:,:));
S1mxPred=squeeze(samples.S1mxPred(z,:,:));
pKawPred=squeeze(samples.pKawPred(z,:,:));
alphamPred=squeeze(samples.alphamPred(z,:,:));
sigmaPred =samples.sigmaPred(z,:); 

logkCond=zeros(1,nObs);
logkPred=zeros(1,nObs);

for i=1:nObs

  logkCond(i) =  funlogki(logkwx(analyte(i),:), ...
                          S1mx(analyte(i),:),...
                          pKaw(analyte(i),:),...
                          alpham(analyte(i),:), ...
                          S2mHat, ...
                          nDiss(analyte(i)), ...
                          fi(i,:));


   logkPred(i) =  funlogki(logkwxPred(analyte(i),:), ...
                          S1mxPred(analyte(i),:),...
                          pKawPred(analyte(i),:),...
                          alphamPred(analyte(i),:), ...
                          S2mHat, ...
                          nDiss(analyte(i)), ...
                          fi(i,:));

end

samples.logkCond(z,:)=logkCond+sigma(analyte).*trnd(nu,size(logkCond));
samples.logkPred(z,:)=logkPred+sigmaPred(analyte).*trnd(nu,size(logkPred)); 
end



function logki=funlogki(logkwx, S1x, pKaw, alpha, S2, nDiss, fi)

logkix   = logkwx-S1x*fi/(1+S2*fi);
pHpKa    = 2.6-(pKaw+alpha*fi);

logki = NaN;

if nDiss==0 
  logki = logkix(1); 
elseif (nDiss==1)
  logki = logkix(1) + ...
          log1p_exp(log(10)*(pHpKa(1)+logkix(2)-logkix(1)))/log(10)-...
          log1p_exp(log(10)*(pHpKa(1)))/log(10);
elseif (nDiss==2)
  logki = logkix(1) + ...
          log1p_exp(log(10)*(pHpKa(1)+logkix(2)-logkix(1)) + ...
          log1p_exp(log(10)*(pHpKa(2)+logkix(3)-logkix(2))))/log(10)- ...
          log1p_exp(log(10)*(pHpKa(1)) +  ...
          log1p_exp(log(10)*(pHpKa(2))))/log(10);
elseif (nDiss==3)
  logki = logkwx(1) + ...
          log1p_exp(log(10)*(pHpKa(1)+logkix(2)-logkix(1)) + ...
          log1p_exp(log(10)*(pHpKa(2)+logkix(3)-logkix(2)) + ...
          log1p_exp(log(10)*(pHpKa(3)+logkix(4)-logkix(3)))))/log(10)- ...
          log1p_exp(log(10)*(pHpKa(1)) +  ...
          log1p_exp(log(10)*(pHpKa(2)) + ...
          log1p_exp(log(10)*(pHpKa(3)))))/log(10);
elseif (nDiss==4)
  logki = logkwx(1) + ...
          log1p_exp(log(10)*(pHpKa(1)+logkix(2)-logkix(1)) + ...
          log1p_exp(log(10)*(pHpKa(2)+logkix(3)-logkix(2)) + ...
          log1p_exp(log(10)*(pHpKa(3)+logkix(4)-logkix(3)) + ...
          log1p_exp(log(10)*(pHpKa(4)+logkix(5)-logkix(4))))))/log(10)- ...
          log1p_exp(log(10)*(pHpKa(1)) + ...
          log1p_exp(log(10)*(pHpKa(2)) + ...
          log1p_exp(log(10)*(pHpKa(3)) + ...
          log1p_exp(log(10)*(pHpKa(4))))))/log(10);

elseif (nDiss==5)
  logki = logkwx(1) +...
          log1p_exp(log(10)*(pHpKa(1)+logkix(2)-logkix(1)) + ...
          log1p_exp(log(10)*(pHpKa(2)+logkix(3)-logkix(2)) + ...
          log1p_exp(log(10)*(pHpKa(3)+logkix(4)-logkix(3)) + ...
          log1p_exp(log(10)*(pHpKa(4)+logkix(5)-logkix(4)) + ...
          log1p_exp(log(10)*(pHpKa(5)+logkix(6)-logkix(5)))))))/log(10)- ...
          log1p_exp(log(10)*(pHpKa(1)) + ...
          log1p_exp(log(10)*(pHpKa(2)) + ...
          log1p_exp(log(10)*(pHpKa(3)) + ...
          log1p_exp(log(10)*(pHpKa(4)) + ...
          log1p_exp(log(10)*(pHpKa(5)))))))/log(10);
end

function y = log1p_exp(x)
y=log(1+exp(x));

function y = log1p(x)
y=log(1+x);